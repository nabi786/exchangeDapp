"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./blockChain/controler.js":
/*!*********************************!*\
  !*** ./blockChain/controler.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StakeWIXFun\": function() { return /* binding */ StakeWIXFun; }\n/* harmony export */ });\n/* harmony import */ var _instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instance */ \"./blockChain/instance.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n\n\nconst StakeWIXFun = ()=>{\n    const stakeWix = async (isWalletConnected, amount, plan)=>{\n        try {\n            console.log(\"Amount \", amount);\n            console.log(\"plan \", plan);\n            var amount = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.parseUnits(amount.toString(), \"ether\");\n            amount = amount.toString();\n            console.log(\"Amount  in Wie \", amount);\n            var { contract_instance , wixContract_instance  } = await (0,_instance__WEBPACK_IMPORTED_MODULE_0__.Contract)(isWalletConnected);\n            var selectedPlan;\n            if (plan == 1) {\n                selectedPlan = (await contract_instance.Plan1()).toString();\n                console.log(\"this is elected Plan 1\", selectedPlan);\n            } else if (plan == 2) {\n                selectedPlan = (await contract_instance.Plan2()).toString();\n                console.log(\"this is elected Plan 2\", selectedPlan);\n            } else if (plan == 3) {\n                selectedPlan = (await contract_instance.Plan3()).toString();\n                console.log(\"this is elected Plan 3\", selectedPlan);\n            } else if (plan == 4) {\n                selectedPlan = (await contract_instance.Plan5()).toString();\n                console.log(\"this is elected Plan 4\", selectedPlan);\n            } else if (plan == 5) {\n                selectedPlan = (await contract_instance.Plan5()).toString();\n                console.log(\"this is elected Plan5\", selectedPlan);\n            } else if (plan == 6) {\n                selectedPlan = (await contract_instance.Plan6()).toString();\n                console.log(\"this is elected Plan 6\", selectedPlan);\n            }\n            const address = await _instance__WEBPACK_IMPORTED_MODULE_0__.signer.getAddress();\n            console.log(\"address \", address);\n            var balance = (await wixContract_instance.balanceOf(address)).toString();\n            if (Number(balance) < Number(amount)) {\n                return {\n                    success: false,\n                    msg: \"not enough balance\"\n                };\n            }\n            var allowance = (await wixContract_instance.allowance(address, \"0x560e9073Ad88857BF29E5776242443fbC801627f\")).toString();\n            if (Number(allowance) < Number(amount)) {\n                await wixContract_instance.approve(\"0x560e9073Ad88857BF29E5776242443fbC801627f\", amount);\n            }\n            // contract_instance.stakeTokens(amount, selectedPlan)\n            await new Promise((resolve)=>{\n                return setTimeout(resolve, 10000);\n            });\n            await contract_instance.stakeTokens(amount, selectedPlan);\n            return {\n                success: true,\n                msg: \"Wix Stake successfully\"\n            };\n        } catch (err) {\n            console.log(\"err\", err);\n            if (err.code == \"ACTION_REJECTED\") {\n                return {\n                    success: false,\n                    msg: \"user rejected transaction\"\n                };\n            }\n            return {\n                success: false,\n                msg: \"\"\n            };\n        }\n    };\n    // unStake before time\n    const unStakeBeforeTimeFun = async (plan)=>{\n        try {\n            var { contract_instance , wixContract_instance  } = await (0,_instance__WEBPACK_IMPORTED_MODULE_0__.Contract)(true);\n            console.log(\"this plan \", plan);\n            var plan_to_unstake = \"\";\n            if (plan == 1) {\n                plan_to_unstake = (await contract_instance.Plan1()).toString();\n            } else if (plan == 2) {\n                plan_to_unstake = (await contract_instance.Plan2()).toString();\n            } else if (plan == 3) {\n                plan_to_unstake = (await contract_instance.Plan3()).toString();\n            } else if (plan == 4) {\n                plan_to_unstake = (await contract_instance.Plan4()).toString();\n            } else if (plan == 5) {\n                plan_to_unstake = (await contract_instance.Plan5()).toString();\n            } else if (plan == 6) {\n                plan_to_unstake = (await contract_instance.Plan6()).toString();\n            }\n            // totalStakedOfPlan1Apy function \n            console.log(\"this isplna to unStake\", plan_to_unstake);\n            // const address = await signer.getAddress();\n            var { contract_instance , wixContract_instance  } = await (0,_instance__WEBPACK_IMPORTED_MODULE_0__.Contract)(true);\n            await contract_instance.unstakeTokensBeforeTime(plan_to_unstake);\n            // console.log(\"staked Detials is working\");\n            return {\n                success: true,\n                msg: \"Unstaked Successfully\"\n            };\n        } catch (err) {\n            console.log(\"this is error is JSON\", err);\n            if (err.code == \"ACTION_REJECTED\") {\n                return {\n                    success: false,\n                    msg: \"user rejected transaction\"\n                };\n            }\n            if (err.error.data) {\n                console.log(\"this property is also working\");\n                if (err.error.data.code == 3) {\n                    var msg = err.error.data.message;\n                    msg = msg.split(\":\");\n                    return {\n                        success: false,\n                        msg: msg[1]\n                    };\n                }\n            }\n        }\n    };\n    // get Staked WIX Detials\n    // ======================Get Stacked Detials===========================//\n    // ======================Get Stacked Detials===========================//\n    // ======================Get Stacked Detials===========================//\n    // ======================Get Stacked Detials===========================//\n    const getStakedDetails = async (plan)=>{\n        try {\n            var { contract_instance , wixContract_instance  } = await (0,_instance__WEBPACK_IMPORTED_MODULE_0__.Contract)(true);\n            // console.log(\"this plan \", plan)\n            var plan_to_unstake = \"\";\n            var yourStackedTokens = 0;\n            var totalStacked = 0;\n            var myBalance = 0;\n            var get_apy = 0;\n            // get address \n            var address = await _instance__WEBPACK_IMPORTED_MODULE_0__.signer.getAddress();\n            if (plan == 1) {\n                plan_to_unstake = (await contract_instance.Plan1()).toString();\n                yourStackedTokens = (await contract_instance.stakingBalancePlan1(address)).toString();\n                yourStackedTokens = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(yourStackedTokens);\n                totalStacked = (await contract_instance.totalStakedOfPlan1()).toString();\n                totalStacked = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(totalStacked);\n                myBalance = (await wixContract_instance.balanceOf(address)).toString();\n                myBalance = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(myBalance);\n                get_apy = (await contract_instance.totalStakedOfPlan1Apy()).toString();\n            } else if (plan == 2) {\n                plan_to_unstake = (await contract_instance.Plan2()).toString();\n                yourStackedTokens = (await contract_instance.stakingBalancePlan2(address)).toString();\n                yourStackedTokens = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(yourStackedTokens);\n                totalStacked = (await contract_instance.totalStakedOfPlan2()).toString();\n                totalStacked = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(totalStacked);\n                myBalance = (await wixContract_instance.balanceOf(address)).toString();\n                myBalance = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(myBalance);\n                get_apy = (await contract_instance.totalStakedOfPlan2Apy()).toString();\n            } else if (plan == 3) {\n                plan_to_unstake = (await contract_instance.Plan3()).toString();\n                yourStackedTokens = (await contract_instance.stakingBalancePlan3(address)).toString();\n                yourStackedTokens = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(yourStackedTokens);\n                totalStacked = (await contract_instance.totalStakedOfPlan3()).toString();\n                totalStacked = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(totalStacked);\n                myBalance = (await wixContract_instance.balanceOf(address)).toString();\n                myBalance = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(myBalance);\n                get_apy = (await contract_instance.totalStakedOfPlan3Apy()).toString();\n            } else if (plan == 4) {\n                plan_to_unstake = (await contract_instance.Plan4()).toString();\n                yourStackedTokens = (await contract_instance.stakingBalancePlan4(address)).toString();\n                yourStackedTokens = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(yourStackedTokens);\n                totalStacked = (await contract_instance.totalStakedOfPlan4()).toString();\n                totalStacked = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(totalStacked);\n                myBalance = (await wixContract_instance.balanceOf(address)).toString();\n                myBalance = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(myBalance);\n                get_apy = (await contract_instance.totalStakedOfPlan4Apy()).toString();\n            } else if (plan == 5) {\n                plan_to_unstake = (await contract_instance.Plan5()).toString();\n                yourStackedTokens = (await contract_instance.stakingBalancePlan5(address)).toString();\n                yourStackedTokens = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(yourStackedTokens);\n                totalStacked = (await contract_instance.totalStakedOfPlan5()).toString();\n                totalStacked = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(totalStacked);\n                myBalance = (await wixContract_instance.balanceOf(address)).toString();\n                myBalance = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(myBalance);\n                get_apy = (await contract_instance.totalStakedOfPlan5Apy()).toString();\n            } else if (plan == 6) {\n                plan_to_unstake = (await contract_instance.Plan6()).toString();\n                yourStackedTokens = (await contract_instance.stakingBalancePlan6(address)).toString();\n                yourStackedTokens = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(yourStackedTokens);\n                totalStacked = (await contract_instance.totalStakedOfPlan6()).toString();\n                totalStacked = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(totalStacked);\n                myBalance = (await wixContract_instance.balanceOf(address)).toString();\n                myBalance = ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.formatEther(myBalance);\n                get_apy = (await contract_instance.totalStakedOfPlan6Apy()).toString();\n            }\n            return {\n                totalStacked,\n                myBalance,\n                get_apy,\n                yourStackedTokens\n            };\n        } catch (err) {\n            console.log(\"erro \", err);\n        }\n    };\n    return {\n        stakeWix,\n        unStakeBeforeTimeFun,\n        getStakedDetails\n    };\n};\n_c = StakeWIXFun;\n\nvar _c;\n$RefreshReg$(_c, \"StakeWIXFun\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./blockChain/controler.js\n"));

/***/ })

});